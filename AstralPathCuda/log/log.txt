[INFO 2023-05-02 10:13:20 ]核函数数:1
[INFO 2023-05-02 10:13:20 ]设备函数数:1
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms      final int N = 1000;//global->     const int N = 1000;//global
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 17 ms int[] __device__d;//length:2->int d[2] =  {};//length:2
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms int[] __device__d_x;//length:N->int d_x[N] =  {};//length:N
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms reduce()(GLOBAL)->reduce()
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         final int tid = threadIdxx;->        const int tid = threadIdx.x;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         final int bid = blockIdxx;->        const int bid = blockIdx.x;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         final int n = tid;->        const int n = tid;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 3 ms         int[] __shared__s_y = {};//extern->extern __shared__ int __shared__s_y[];
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         if (n < N) {->        if (n < N) {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 12 ms             __shared__s_y[tid] = ICuda.__ldg(__device__d_x[n]);->            __shared__s_y[tid] = __ldg(&d_x[n]);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         }->        }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         ICuda.__syncthreads();->        __syncthreads();
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         for (int offset = blockDimx >> 1; offset >= 32; offset >>= 1)->        for (int offset = blockDim.x >> 1; offset >= 32; offset >>= 1)
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         {->        {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms             if (tid < offset)->            if (tid < offset)
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms             {->            {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms                 __shared__s_y[tid] += __shared__s_y[tid + offset];->                __shared__s_y[tid] += __shared__s_y[tid + offset];
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms             }->            }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms             ICuda.__syncthreads();->            __syncthreads();
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         int y = __shared__s_y[tid];->        int y = __shared__s_y[tid];
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         for (int offset = 16; offset > 0; offset >>= 1)->        for (int offset = 16; offset > 0; offset >>= 1)
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         {->        {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 2 ms             y += ICuda.__shfl_down_sync("0xffffffff", y, offset);->            y += __shfl_down_sync(0xffffffff, y, offset);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         }->        }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         if (tid == 0)->        if (tid == 0)
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         {->        {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms             ICuda.atomicAdd(__device__d[0], y);->            atomicAdd(&d[0], y);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms     }->    }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         int[] ha = new int[N];->        int ha[N] = {};
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         for(int x = 0; x < N ; ++x) {->        for(int x = 0; x < N ; ++x) {
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms             ha[x] = 1;->            ha[x] = 1;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         ha[0] = ICuda.atoi(argv[1]);->        ha[0] = atoi(argv[1]);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         ICuda.cudaMemcpyToSymbol("d_x","ha",ICuda.sizeof("int")*N);->        cudaMemcpyToSymbol(d_x,ha,sizeof(int)*N);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         final int block_size = 128;->        const int block_size = 128;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         final int grid_size =  (N + block_size - 1) / block_size;->        const int grid_size =  (N + block_size - 1) / block_size;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 1 ms         __global__reduce();//tags:<<<block_size,grid_size,128>>>->        reduce<<<block_size,grid_size,128>>>();//tags:<<<block_size,grid_size,128>>>
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         int device_id = 0;->        int device_id = 0;
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         ICuda.cudaMemcpyFromSymbol("ha","d",ICuda.sizeof("int")*2);->        cudaMemcpyFromSymbol(ha,d,sizeof(int)*2);
[INFO 2023-05-02 10:13:20 ](Java2Cuda)耗时: 0 ms         System.out.printf("c=%d\n",ha[0]);->        printf("c=%d\n",ha[0]);
[INFO 2023-05-02 10:16:21 ]-----------------------------
[INFO 2023-05-02 10:16:21 ]核函数数:1
[INFO 2023-05-02 10:16:21 ]设备函数数:1
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 2 ms      final int N = 1000;//global->     const int N = 1000;//global
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 18 ms int[] __device__d_x;//length:N->int d_x[N] =  {};//length:N
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms int[] __device__d;//length:2->int d[2] =  {};//length:2
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms reduce()(GLOBAL)->reduce()
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         final int tid = threadIdxx;->        const int tid = threadIdx.x;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 4 ms         final int bid = blockIdxx;->        const int bid = blockIdx.x;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         final int n = tid;->        const int n = tid;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         int[] __shared__s_y = {};//extern->extern __shared__ int __shared__s_y[];
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         if (n < N) {->        if (n < N) {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 9 ms             __shared__s_y[tid] = ICuda.__ldg(__device__d_x[n]);->            __shared__s_y[tid] = __ldg(&d_x[n]);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         }->        }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         ICuda.__syncthreads();->        __syncthreads();
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         for (int offset = blockDimx >> 1; offset >= 32; offset >>= 1)->        for (int offset = blockDim.x >> 1; offset >= 32; offset >>= 1)
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         {->        {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms             if (tid < offset)->            if (tid < offset)
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms             {->            {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms                 __shared__s_y[tid] += __shared__s_y[tid + offset];->                __shared__s_y[tid] += __shared__s_y[tid + offset];
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms             }->            }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms             ICuda.__syncthreads();->            __syncthreads();
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         int y = __shared__s_y[tid];->        int y = __shared__s_y[tid];
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         for (int offset = 16; offset > 0; offset >>= 1)->        for (int offset = 16; offset > 0; offset >>= 1)
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         {->        {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 2 ms             y += ICuda.__shfl_down_sync("0xffffffff", y, offset);->            y += __shfl_down_sync(0xffffffff, y, offset);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         if (tid == 0)->        if (tid == 0)
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         {->        {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms             ICuda.atomicAdd(__device__d[0], y);->            atomicAdd(&d[0], y);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         }->        }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms     }->    }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         int[] ha = new int[N];->        int ha[N] = {};
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         for(int x = 0; x < N ; ++x) {->        for(int x = 0; x < N ; ++x) {
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms             ha[x] = 1;->            ha[x] = 1;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         }->        }
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         ha[0] = ICuda.atoi(argv[1]);->        ha[0] = atoi(argv[1]);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         ICuda.cudaMemcpyToSymbol("d_x","ha",ICuda.sizeof("int")*N);->        cudaMemcpyToSymbol(d_x,ha,sizeof(int)*N);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         final int block_size = 128;->        const int block_size = 128;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms         final int grid_size =  (N + block_size - 1) / block_size;->        const int grid_size =  (N + block_size - 1) / block_size;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         __global__reduce();//tags:<<<block_size,grid_size,128>>>->        reduce<<<block_size,grid_size,128>>>();//tags:<<<block_size,grid_size,128>>>
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 1 ms ->
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         int device_id = 0;->        int device_id = 0;
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         ICuda.cudaMemcpyFromSymbol("ha","d",ICuda.sizeof("int")*2);->        cudaMemcpyFromSymbol(ha,d,sizeof(int)*2);
[INFO 2023-05-02 10:16:21 ](Java2Cuda)耗时: 0 ms         System.out.printf("c=%d\n",ha[0]);->        printf("c=%d\n",ha[0]);
[INFO 2023-05-02 10:17:16 ]-----------------------------
[INFO 2023-05-02 10:17:16 ]核函数数:1
[INFO 2023-05-02 10:17:16 ]设备函数数:1
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms      final int N = 1000;//global ->      const int N = 1000;//global
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 21 ms int[] __device__d_x;//length:N -> int d_x[N] =  {};//length:N
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 2 ms int[] __device__d;//length:2 -> int d[2] =  {};//length:2
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms reduce()(GLOBAL) -> reduce()
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         final int tid = threadIdxx; ->         const int tid = threadIdx.x;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         final int bid = blockIdxx; ->         const int bid = blockIdx.x;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         final int n = tid; ->         const int n = tid;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         int[] __shared__s_y = {};//extern -> extern __shared__ int __shared__s_y[];
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         if (n < N) { ->         if (n < N) {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 9 ms             __shared__s_y[tid] = ICuda.__ldg(__device__d_x[n]); ->             __shared__s_y[tid] = __ldg(&d_x[n]);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         } ->         }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         ICuda.__syncthreads(); ->         __syncthreads();
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         for (int offset = blockDimx >> 1; offset >= 32; offset >>= 1) ->         for (int offset = blockDim.x >> 1; offset >= 32; offset >>= 1)
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         { ->         {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms             if (tid < offset) ->             if (tid < offset)
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms             { ->             {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms                 __shared__s_y[tid] += __shared__s_y[tid + offset]; ->                 __shared__s_y[tid] += __shared__s_y[tid + offset];
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms             } ->             }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms             ICuda.__syncthreads(); ->             __syncthreads();
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         } ->         }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 2 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         int y = __shared__s_y[tid]; ->         int y = __shared__s_y[tid];
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         for (int offset = 16; offset > 0; offset >>= 1) ->         for (int offset = 16; offset > 0; offset >>= 1)
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         { ->         {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms             y += ICuda.__shfl_down_sync("0xffffffff", y, offset); ->             y += __shfl_down_sync(0xffffffff, y, offset);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         } ->         }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         if (tid == 0) ->         if (tid == 0)
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         { ->         {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms             ICuda.atomicAdd(__device__d[0], y); ->             atomicAdd(&d[0], y);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         } ->         }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms     } ->     }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         int[] ha = new int[N]; ->         int ha[N] = {};
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         for(int x = 0; x < N ; ++x) { ->         for(int x = 0; x < N ; ++x) {
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms             ha[x] = 1; ->             ha[x] = 1;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         } ->         }
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         ha[0] = ICuda.atoi(argv[1]); ->         ha[0] = atoi(argv[1]);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         ICuda.cudaMemcpyToSymbol("d_x","ha",ICuda.sizeof("int")*N); ->         cudaMemcpyToSymbol(d_x,ha,sizeof(int)*N);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         final int block_size = 128; ->         const int block_size = 128;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         final int grid_size =  (N + block_size - 1) / block_size; ->         const int grid_size =  (N + block_size - 1) / block_size;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 1 ms         __global__reduce();//tags:<<<block_size,grid_size,128>>> ->         reduce<<<block_size,grid_size,128>>>();//tags:<<<block_size,grid_size,128>>>
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms  -> 
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         int device_id = 0; ->         int device_id = 0;
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         ICuda.cudaMemcpyFromSymbol("ha","d",ICuda.sizeof("int")*2); ->         cudaMemcpyFromSymbol(ha,d,sizeof(int)*2);
[INFO 2023-05-02 10:17:16 ](Java2Cuda)耗时: 0 ms         System.out.printf("c=%d\n",ha[0]); ->         printf("c=%d\n",ha[0]);
